{"version":3,"sources":["logo.svg","Input.js","countriesPL.js","Current.js","Day.js","Forecast.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","onSubmit","checkForm","type","name","placeholder","onChange","cityName","icon","countriesPL","AF","AX","AL","DZ","AS","AD","AI","AQ","AO","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","CV","KH","CM","CA","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","WE","EG","SV","GQ","ER","EE","SZ","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","JA","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MK","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","Current","data","currentData","description","weather","city","temp","main","toFixed","humidity","pressure","feelsLike","feels_like","wind","speed","sunrise","sys","sunset","iconUrl","country","console","log","countryName","format_time","daytime","Date","timezone","toISOString","replace","slice","key","hasOwnProperty","element","countryFullName","string","desc","charAt","toUpperCase","a","dt","day","getDay","month","getMonth","getDate","date","src","alt","Day","logo","Forecast","library","add","faSearch","App","useState","setCity","coord","lon","lat","setData","useEffect","delay","sectionsToHide","document","querySelectorAll","setTimeout","forEach","section","style","opacity","showContent","e","target","value","preventDefault","Axios","get","then","response","querySelector","textContent","catch","error","forecastData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.128b89a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Input.css'\r\n\r\nconst Input = props => {\r\n\r\n    return (\r\n        <section className=\"city-input\">\r\n            <form onSubmit={props.checkForm}>\r\n                <div className='input-wrap'>\r\n                    <input type=\"text\" name=\"name\" placeholder='Wpisz nazwę miasta!' onChange={props.cityName} />\r\n                    <button type=\"submit\"><FontAwesomeIcon icon=\"search\" /></button>\r\n                </div>\r\n                <p className='error-msg'></p>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Input;","const countriesPL = {\r\n    AF: 'Afganistan',\r\n    AX: 'Wyspy Alandzkie',\r\n    AL: 'Albania',\r\n    DZ: 'Algeria',\r\n    AS: 'Samoa Amerykańskie',\r\n    AD: 'Andora',\r\n    AI: 'Anguilla',\r\n    AQ: 'Antarktyda',\r\n    AO: 'Angola',\r\n    AG: 'Antigua i Barbuda',\r\n    AR: 'Argentyna',\r\n    AM: 'Armenia',\r\n    AW: 'Aruba',\r\n    AU: 'Australia',\r\n    AT: 'Austria',\r\n    AZ: 'Azerbejdżan',\r\n    BS: 'Bahamy',\r\n    BH: 'Bahrajn',\r\n    BD: 'Bangladesz',\r\n    BB: 'Barbados',\r\n    BY: 'Białoruś',\r\n    BE: 'Belgia',\r\n    BZ: 'Belize',\r\n    BJ: 'Benin',\r\n    BM: 'Bermudy',\r\n    BT: 'Bhutan',\r\n    BO: 'Boliwia',\r\n    BQ: 'Sint Eustatius',\r\n    BA: 'Bośnia i Hercegowina',\r\n    BW: 'Botswana',\r\n    BV: 'Wyspa Bouveta',\r\n    BR: 'Brazylia',\r\n    IO: 'Bryt. Ter. Oceanu Indyjskiego',\r\n    BN: 'Brunei',\r\n    BG: 'Bułgaria',\r\n    BF: 'Burkina Faso',\r\n    BI: 'Burundi',\r\n    CV: 'Cabo Verde',\r\n    KH: 'Kambodża',\r\n    CM: 'Kamerun',\r\n    CA: 'Kanada',\r\n    KY: 'Kajmany',\r\n    CF: 'Republika Środkowoafrykańska',\r\n    TD: 'Czad',\r\n    CL: 'Chile',\r\n    CN: 'Chiny',\r\n    CX: 'Wyspa Bożego Narodzenia',\r\n    CC: 'Wyspy Kokosowe (Keelinga)',\r\n    CO: 'Kolumbia',\r\n    KM: 'Komory',\r\n    CG: 'Kongo',\r\n    CD: 'Demokratyczna Republika Konga',\r\n    CK: 'Wyspy Cooka',\r\n    CR: 'Kostaryka',\r\n    CI: 'Wybrzeże Kości Słoniowej',\r\n    HR: 'Chorwacja',\r\n    CU: 'Kuba',\r\n    CW: 'Curaçao',\r\n    CY: 'Cypr',\r\n    CZ: 'Czechy',\r\n    DK: 'Dania',\r\n    DJ: 'Dżibuti',\r\n    DM: 'Dominika',\r\n    DO: 'Republika Dominikany',\r\n    WE: 'Ekwador',\r\n    EG: 'Egipt',\r\n    SV: 'Salwador',\r\n    GQ: 'Gwinea Równikowa',\r\n    ER: 'Erytrea',\r\n    EE: 'Estonia',\r\n    SZ: 'Eswatini',\r\n    ET: 'Etiopia',\r\n    FK: 'Falklandy',\r\n    FO: 'Wyspy Owcze',\r\n    FJ: 'Fidżi',\r\n    FI: \"Finlandia\",\r\n    FR: 'Francja',\r\n    GF: 'Gujana Francuska',\r\n    PF: 'Polinezja Francuska',\r\n    TF: 'Francuskie Terytoria Południowe',\r\n    GA: 'Gabon',\r\n    GM: 'Gambia',\r\n    GE: 'Gruzja',\r\n    DE: 'Niemcy',\r\n    GH: 'Ghana',\r\n    GI: 'Gibraltar',\r\n    GR: 'Grecja',\r\n    GL: 'Grenlandia',\r\n    GD: 'Grenada',\r\n    GP: 'Gwadelupa',\r\n    GU: 'Guam',\r\n    GT: 'Gwatemala',\r\n    GG: 'Guernsey',\r\n    GN: 'Gwinea',\r\n    GW: 'Gwinea Bissau',\r\n    GY: 'Gujana',\r\n    HT: 'Haiti',\r\n    HM: 'Wyspy Heard i McDonalda',\r\n    VA: 'Stolica Apostolska',\r\n    HN: 'Honduras',\r\n    HK: 'Hongkong',\r\n    HU: 'Węgry',\r\n    IS: 'Islandia',\r\n    IN: 'Indie',\r\n    ID: 'Indonezja',\r\n    IR: 'Iran',\r\n    IQ: 'Irak',\r\n    IE: 'Irlandia',\r\n    IM: 'Wyspa Man',\r\n    IL: 'Izrael',\r\n    IT: 'Włochy',\r\n    JM: 'Jamajka',\r\n    JP: 'Japonia',\r\n    JE: 'Jersey',\r\n    JO: 'Jordan',\r\n    KZ: 'Kazachstan',\r\n    KE: 'Kenia',\r\n    KI: 'Kiribati',\r\n    KP: 'Korea Północna',\r\n    KR: 'Korea Południowa',\r\n    KW: 'Kuwejt',\r\n    KG: 'Kirgistan',\r\n    LA: 'Laos',\r\n    LV: 'Łotwa',\r\n    LB: 'Liban',\r\n    LS: 'Lesotho',\r\n    LR: 'Liberia',\r\n    LY: 'Libia',\r\n    LI: 'Liechtenstein',\r\n    LT: 'Litwa',\r\n    LU: 'Luksemburg',\r\n    MO: 'Macao',\r\n    MG: 'Madagaskar',\r\n    MW: 'Malawi',\r\n    MY: 'Malezja',\r\n    MV: 'Malediwy',\r\n    ML: 'Mali',\r\n    MT: 'Malta',\r\n    MH: 'Wyspy Marshalla',\r\n    MQ: 'Martinique',\r\n    MR: 'Mauretania',\r\n    MU: 'Mauritius',\r\n    YT: 'Majotta',\r\n    MX: 'Meksyk',\r\n    FM: 'Mikronezja',\r\n    MD: 'Mołdawia',\r\n    MC: 'Monako',\r\n    MN: 'Mongolia',\r\n    JA: 'Czarnogóra',\r\n    MS: 'Montserrat',\r\n    MA: 'Maroko',\r\n    MZ: 'Mozambik',\r\n    MM: 'Myanmar',\r\n    NA: 'Namibia',\r\n    NR: 'Nauru',\r\n    NP: 'Nepal',\r\n    NL: 'Holandia',\r\n    NC: 'Nowa Kaledonia',\r\n    NZ: 'Nowa Zelandia',\r\n    NI: 'Nikaragua',\r\n    NE: 'Niger',\r\n    NG: 'Nigeria',\r\n    NU: 'Niue',\r\n    NF: 'Wyspa Norfolk',\r\n    MK: 'Macedonia Północna',\r\n    MP: 'Mariany Północne',\r\n    NO: 'Norwegia',\r\n    OM: 'Oman',\r\n    PK: 'Pakistan',\r\n    PW: 'Palau',\r\n    PS: 'Palestyna, stan',\r\n    PA: 'Panama',\r\n    PG: 'Papua-Nowa Gwinea',\r\n    PY: 'Paragwaj',\r\n    PE: 'Peru',\r\n    PH: 'Filipiny',\r\n    PN: 'Pitcairn',\r\n    PL: 'Polska',\r\n    PT: 'Portugalia',\r\n    PR: 'Puerto Rico',\r\n    QA: 'Katar',\r\n    RE: 'Réunion',\r\n    RO: 'Rumunia',\r\n    RU: 'Federacja Rosyjska',\r\n    RW: 'Rwanda',\r\n    BL: 'Saint Barthélemy',\r\n    SH: 'Wyspa Świętej Heleny',\r\n    KN: 'Saint Kitts and Nevis',\r\n    LC: 'Saint Lucia',\r\n    MF: 'Saint Martin',\r\n    PM: 'Saint Pierre',\r\n    VC: 'Grenadyny',\r\n    WS: 'Samoa',\r\n    SM: 'San Marino',\r\n    ST: 'Wyspy Świętego Tomasza',\r\n    SA: 'Arabia Saudyjska',\r\n    SN: 'Senegal',\r\n    RS: 'Serbia',\r\n    SC: 'Seszele',\r\n    SL: 'Sierra Leone',\r\n    SG: 'Singapur',\r\n    SX: 'Sint Maarten',\r\n    SK: 'Słowacja',\r\n    SI: 'Słowenia',\r\n    SB: 'Wyspy Salomona',\r\n    SO: 'Somalia',\r\n    ZA: 'Republika Południowej Afryki',\r\n    GS: 'Georgia',\r\n    SS: 'Sudan Południowy',\r\n    ES: 'Hiszpania',\r\n    LK: 'Sri Lanka',\r\n    SD: 'Sudan',\r\n    SR: 'Surinam',\r\n    SJ: 'Svalbard i Jan Mayen',\r\n    SE: 'Szwecja',\r\n    CH: 'Szwajcaria',\r\n    SY: 'Syryjska Republika Arabska',\r\n    TW: 'Tajwan',\r\n    TJ: 'Tadżykistan',\r\n    TZ: 'Tanzania',\r\n    TH: 'Tajlandia',\r\n    TL: 'Timor Wschodni',\r\n    TG: 'Togo',\r\n    TK: 'Tokelau',\r\n    TO: 'Tonga',\r\n    TT: 'Trynidad i Tobago',\r\n    TN: 'Tunezja',\r\n    TR: 'Turcja',\r\n    TM: 'Turkmenistan',\r\n    TC: 'Wyspy Turks i Caicos',\r\n    TV: 'Tuvalu',\r\n    UG: 'Uganda',\r\n    UA: 'Ukraina',\r\n    AE: 'Zjednoczone Emiraty Arabskie',\r\n    GB: 'Wielka Brytania',\r\n    US: 'Stany Zjednoczone Ameryki',\r\n    UM: 'Dalekie Wyspy Mniejsze USA',\r\n    UY: 'Urugwaj',\r\n    UZ: 'Uzbekistan',\r\n    VU: 'Vanuatu',\r\n    VE: 'Wenezuela',\r\n    VN: 'Wietnam',\r\n    VG: 'Wyspy Dziewicze (Brytyjskie)',\r\n    VI: 'Wyspy Dziewicze (USA)',\r\n    WF: 'Wallis i Futuna',\r\n    EH: 'Sahara Zachodnia',\r\n    YE: 'Jemen',\r\n    ZM: 'Zambia',\r\n    ZW: 'Zimbabwe',\r\n}\r\n\r\nexport default countriesPL;","import React from 'react';\r\nimport './Current.css'\r\nimport countriesPL from './countriesPL'\r\n\r\nfunction Current(props) {\r\n    const data = props.currentData;\r\n    const description = data.weather[0].description\r\n    const city = data.name;\r\n    const temp = data.main.temp.toFixed();\r\n    const humidity = data.main.humidity;\r\n    const pressure = data.main.pressure;\r\n    const feelsLike = data.main.feels_like.toFixed();\r\n    const wind = (data.wind.speed * 3.6).toFixed(1);\r\n    const sunrise = data.sys.sunrise;\r\n    const sunset = data.sys.sunset;\r\n    const icon = data.weather[0].icon;\r\n    const iconUrl = 'http://openweathermap.org/img/wn/' + icon + '@2x.png';\r\n    const country = data.sys.country;\r\n    console.log(country)\r\n    let countryName = '';\r\n\r\n    const countryFullName = () => {\r\n        for (const key in countriesPL) {\r\n            if (countriesPL.hasOwnProperty(key)) {\r\n                const element = countriesPL[key];\r\n\r\n                if (country === key) {\r\n                    console.log(element)\r\n                    countryName = element;\r\n                }\r\n            };\r\n        };\r\n    };\r\n\r\n    countryFullName();\r\n\r\n    function format_time(daytime) {\r\n        const time = new Date((daytime * 1000) + (data.timezone * 1000)).toISOString().replace(/T/, ' ').replace(/\\..+/, '').slice(11, -3);\r\n\r\n        return time;\r\n    };\r\n\r\n    const date = () => {\r\n        const a = new Date((data.dt * 1000) + (data.timezone * 1000));\r\n        const days = ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota']\r\n\r\n        const months = ['Stycznia', 'Lutego', 'Marca', 'Kwietnia', 'Maja', 'Czerwca', 'Lipca', 'Sierpnia', 'Września', 'Października', 'Listopada', 'Grudnia'];\r\n\r\n        const day = days[a.getDay()];\r\n        const month = months[a.getMonth()];\r\n        const time = `${day} ${a.getDate()} ${month}`;\r\n        return time;\r\n    };\r\n\r\n    const capitalizeFirstLetter = string => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    const desc = capitalizeFirstLetter(description);\r\n\r\n    return (\r\n        <section className=\"current-forecast hide\">\r\n            <div className=\"city\">\r\n                <h2>{city}, <span>{countryName}</span></h2>\r\n                <p>{date()}</p>\r\n            </div>\r\n            <div className=\"current-temp\">\r\n                <div className=\"icon\">\r\n                    <img src={iconUrl} alt=\"lorem\"></img>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <h2>{temp}°C</h2>\r\n                    <p>{desc}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"current-others\">\r\n                <div className=\"rain\">\r\n                    <h3>{feelsLike}°C</h3>\r\n                    <p>Odczuwalna temperatura</p>\r\n                </div>\r\n                <div className=\"wind\">\r\n                    <h3>{wind}km/h</h3>\r\n                    <p>Prędkość wiatru</p>\r\n                </div>\r\n                <div className=\"sunrise\">\r\n                    <h3>{format_time(sunrise)}</h3>\r\n                    <p>Wschód</p>\r\n                </div>\r\n                <div className=\"pressure\">\r\n                    <h3>{pressure}hPa</h3>\r\n                    <p>Ciśnienie</p>\r\n                </div>\r\n                <div className=\"humidity\">\r\n                    <h3>{humidity}%</h3>\r\n                    <p>Wilgotność</p>\r\n                </div>\r\n                <div className=\"sunset\">\r\n                    <h3>{format_time(sunset)}</h3>\r\n                    <p>Zachód</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Current;","import React from 'react'\r\nimport './Forecast.css'\r\nimport logo from './logo.svg';\r\n\r\n\r\nconst Day = (props) => {\r\n    return (\r\n        <div className='day'>\r\n            <h4>\r\n                {props.day}\r\n            </h4>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>5°</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Day;","import React from 'react'\r\nimport './Forecast.css'\r\nimport Day from './Day'\r\nconst Forecast = (props) => {\r\n\r\n    // const data = props.forecastData.data;\r\n\r\n    return (\r\n        <section className=\"forecast hide\">\r\n            <Day day='poniedziałek' />\r\n            <Day day='wtorek' />\r\n            <Day day='środa' />\r\n            <Day day='czwartek' />\r\n            <Day day='piątek' />\r\n            <Day day='sobota' />\r\n            <Day day='niedziela' />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Forecast;","import logo from './logo.svg';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport Input from './Input'\nimport Current from './Current.js'\nimport Forecast from './Forecast';\nimport { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nlibrary.add(faSearch);\n\nfunction App() {\n  const entryData = {\n    main: {\n      humidity: 0,\n      pressure: 0,\n      temp: 0,\n      feels_like: 0\n    },\n    name: '',\n    dt: 0,\n    sys: {\n      sunrise: 0,\n      sunset: 0,\n      country: ''\n    },\n    weather: [\n      {\n        description: '',\n        // main: 'Clear',\n        icon: '10n'\n      }\n    ],\n    wind: {\n      speed: 0\n    },\n    timezone: 3600,\n    coord: {\n      lon: 69,\n      lat: 0\n    }\n  };\n\n  const [city, setCity] = useState();\n  const [data, setData] = useState(entryData);\n\n  const getCity = e => {\n    setCity(e.target.value);\n  };\n\n  // const getForecastData = () => {\n  //   Axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=hourly,current,minutely,alerts&appid=de310e87d3a7bcda1c723953103565a6&units=metric&lang=pl  `)\n  //     .then(function (response) {\n  //       // handle success\n  //       setForecastData(response.data);\n  //     })\n  // };\n\n  const getCurrentData = () => {\n    Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=de310e87d3a7bcda1c723953103565a6&units=metric&lang=pl`)\n      .then(function (response) {\n        // handle success\n        document.querySelectorAll('.hide').forEach((section) => {\n          section.style.opacity = '0';\n        })\n        setTimeout(() => {\n          setData(response.data);\n        }, 400);\n\n        document.querySelector('.error-msg').textContent = '';\n        document.querySelector('.input-wrap input').value = '';\n        setCity('');\n        console.log(data);\n\n      })\n      .then(() => {\n        console.log(data);\n      })\n      .catch(function (error) {\n        // handle error\n        if (document.querySelector('input').value === '') {\n          document.querySelector('.error-msg').textContent = 'Musisz coś wpisać!'\n          return\n        } else {\n          document.querySelector('.error-msg').textContent = 'Wpisz poprawną nazwę miasta!'\n          console.log(error);\n        };\n      });\n  };\n\n  const submitCity = e => {\n    e.preventDefault();\n    getCurrentData();\n  };\n\n  useEffect(() => {\n    const showContent = (delay) => {\n      if (data.name !== '') {\n        const sectionsToHide = document.querySelectorAll('.hide');\n\n        setTimeout(() => {\n          sectionsToHide.forEach((section) => {\n            section.style.opacity = '1';\n          })\n        }, delay);\n      };\n    };\n    showContent(150);\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Weather app in</h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <Input cityName={getCity} checkForm={submitCity} />\n      <Current currentData={data} />\n      <Forecast forecastData={data} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}